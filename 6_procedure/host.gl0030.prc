SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE "GL0030" (
   PV_REFCURSOR   IN OUT   PKG_REPORT.REF_CURSOR,
   OPT            IN       VARCHAR2,
   BRID           IN       VARCHAR2,
   F_DATE         IN       VARCHAR2,
   T_DATE         IN       VARCHAR2,
   ACCTNO         IN       VARCHAR2,
   CUSTID         IN       VARCHAR2,
   TASKCD         IN       VARCHAR2,
   DEPTCD         IN       VARCHAR2,
   COACCTNO       IN       VARCHAR2
  )
IS
--
-- PURPOSE: BRIEFLY EXPLAIN THE FUNCTIONALITY OF THE PROCEDURE
-- SO CHI TIET TAI KHOAN
-- MODIFICATION HISTORY
-- PERSON      DATE    COMMENTS
-- NAMNT  21-NOV-06  CREATED
-- ---------   ------  -------------------------------------------
   V_STROPTION        VARCHAR2 (5);       -- A: ALL; B: BRANCH; S: SUB-BRANCH
   V_STRBRID          VARCHAR2 (4);              -- USED WHEN V_NUMOPTION > 0
   V_STRACCTNO        VARCHAR2 (20);
   V_STRCUSTID        VARCHAR2 (20);
   V_STRTASKCD        VARCHAR2 (10);
   V_STRDEPTCD        VARCHAR2 (10);
   V_COACCTNO         VARCHAR2 (20);
   BE_BALANCE          NUMBER (20, 2);
   LENG               NUMBER (20, 2);
   PV_CUR             PKG_REPORT.REF_CURSOR;
    V_PERIOD            VARCHAR2 (4);
   DMIN         DATE ;
-- DECLARE PROGRAM VARIABLES AS SHOWN ABOVE
BEGIN
   V_STROPTION := OPT;
   IF (V_STROPTION <> 'A') AND (BRID <> 'ALL')
   THEN
      V_STRBRID := BRID;
   ELSE
      V_STRBRID := '%%';
   END IF;

   -- GET REPORT'S PARAMETERS

      V_STRACCTNO := ACCTNO||'%';


     IF (COACCTNO <> 'ALL')
   THEN
      V_COACCTNO := COACCTNO||'%';
   ELSE
      V_COACCTNO := '%%';
   END IF;


    IF (CUSTID  <> 'ALL')
   THEN
      V_STRCUSTID := CUSTID;
   ELSE
      V_STRCUSTID := '%%';
   END IF;

    IF (TASKCD <> 'ALL')
   THEN
      V_STRTASKCD := TASKCD;
   ELSE
      V_STRTASKCD := '%%';
   END IF;

 IF (DEPTCD  <> 'ALL')
   THEN
      V_STRDEPTCD := DEPTCD ;
   ELSE
      V_STRDEPTCD  := '%%';
   END IF;

   -- END OF GETTING REPORT'S PARAMETERS
  OPEN PV_CUR
  FOR
  SELECT MIN(TXDATE)
  FROM GLHIST
  WHERE ACCTNO LIKE V_STRACCTNO  ;
  LOOP
      FETCH PV_CUR
       INTO DMIN ;
       EXIT WHEN PV_CUR%NOTFOUND;
  END LOOP;
  CLOSE PV_CUR;

  --XAC DINH LOAI NGAY

   -- TINH SO DU DAU KY

V_PERIOD :='EOD';

 OPEN PV_CUR
 FOR
 SELECT SUM(BALANCE)
 FROM GLHIST
 WHERE TXDATE = ( SELECT MAX(TXDATE) FROM GLHIST WHERE TXDATE< TO_DATE ( F_DATE ,'DD/MM/YYYY') )
 AND  ACCTNO LIKE V_STRACCTNO   AND PERIOD LIKE V_PERIOD
 AND substr(ACCTNO ,1,4) LIKE V_STRBRID  ;

   LOOP
   FETCH PV_CUR
   INTO BE_BALANCE;
   EXIT WHEN PV_CUR%NOTFOUND;
   END LOOP;
   CLOSE PV_CUR;




   OPEN PV_REFCURSOR
      FOR
      SELECT nvl(ROUND(BE_BALANCE),0) BE_BALANCE,  MST.TLTXCD TLTXCD  ,MST.TXDATE TXDATE,MST.TXNUM TXNUM,
        nvl(MST.DESCRIPTION,MST.TXDESC) TXDESC, MST.COACCTNO COACCTNO ,
        ROUND (CASE WHEN NVL(MST.AMT,0)=0 OR ABS(MST.DRAMT)<ABS( MST.AMT) THEN MST.DRAMT ELSE MST.AMT END) DRAMT,
        ROUND (CASE WHEN NVL(MST.AMT,0)=0 OR ABS(MST.CRAMT)< ABS(MST.AMT) THEN MST.CRAMT ELSE MST.AMT END)CRAMT,
        NVL(MST.FULLNAME,MST.MICUSTNAME) FULLNAME,MST.BUSDATE,TO_CHAR(MST.TASKCD) TASKCD ,TO_CHAR(MST.MICD) MICD ,TO_CHAR(MST.DEPTCD) DEPTCD
FROM
    (

    SELECT  TL.TLTXCD, TL.TXDATE, TL.TXNUM, TL.BUSDATE, GL.CCYCD, TL.TXDESC,CF.fullname ,CF.custid,
                GL.ACCTNO, GL.DORC, GL.SUBTXNO, (CASE WHEN GL.DORC='D' THEN GL.AMT ELSE 0 END) DRAMT,
                (CASE WHEN GL.DORC='C' THEN GL.AMT ELSE 0 END) CRAMT, GL1.ACCTNO COACCTNO, GL1.AMT,
                MI.CUSTID MICUSTID, MI.CUSTNAME MICUSTNAME,   AL1.CDCONTENT   TASKCD,AL2.CDCONTENT DEPTCD
                ,AL3.CDCONTENT  MICD ,MI.DESCRIPTION
     FROM  TLLOGALL TL, GLTRANA GL,AFMAST AF ,CFMAST CF, GLTRANA GL1, MITRAN MI ,ALLCODE AL1,ALLCODE AL2 ,ALLCODE AL3
     WHERE TL.TXDATE=GL.TXDATE
     AND TL.TXNUM=GL.TXNUM
     AND TL.DELTD<>'Y'
     AND TL.BUSDATE >= TO_DATE (F_DATE, 'DD/MM/YYYY')
     AND TL.BUSDATE <= TO_DATE (T_DATE, 'DD/MM/YYYY')
     AND TL.msgacct = AF.acctno(+)
     AND AF.custid = CF.custid (+)
     AND GL.ACCTNO LIKE V_STRACCTNO
     AND GL1.txdate (+) = GL.txdate
     AND GL1.TXNUM (+) = GL.txnum
     AND GL1.subtxno (+) = GL.subtxno
     AND GL1.dorc (+) = (CASE WHEN GL.DORC='D' THEN 'C' ELSE 'D' END)
     AND MI.TXDATE(+)= GL.TXDATE
     AND MI.txnum (+) = GL.txnum
     AND MI.SUBTXNO (+) = GL.SUBTXNO
     AND MI.ACCTNO (+) = GL.ACCTNO
     AND MI.DORC (+) = GL.DORC
     AND AL1.CDVAL =NVL(MI.TASKCD,'MIS') AND AL1.CDTYPE ='SA' AND AL1.CDNAME ='TASKCD'
     AND AL2.CDVAL =NVL(MI.DEPTCD,'MIS') AND AL2.CDTYPE ='SA' AND AL2.CDNAME ='DEPTCD'
     AND AL3.CDVAL =NVL(MI.MICD,'MIS') AND  AL3.CDTYPE ='SA' AND AL3.CDNAME ='IECD'


   --  AND MI.deltd <> 'Y'
     UNION ALL
         SELECT  TL.TLTXCD, TL.TXDATE, TL.TXNUM, TL.BUSDATE, GL.CCYCD, TL.TXDESC,CF.fullname ,CF.custid,
                GL.ACCTNO, GL.DORC, GL.SUBTXNO, (CASE WHEN GL.DORC='D' THEN GL.AMT ELSE 0 END) DRAMT,
                (CASE WHEN GL.DORC='C' THEN GL.AMT ELSE 0 END) CRAMT, GL1.ACCTNO COACCTNO, GL1.AMT,
                MI.CUSTID MICUSTID, MI.CUSTNAME MICUSTNAME,   AL1.CDCONTENT   TASKCD,AL2.CDCONTENT DEPTCD
                ,AL3.CDCONTENT  MICD, MI.DESCRIPTION
     FROM  TLLOG TL, GLTRAN GL,AFMAST AF ,CFMAST CF, GLTRAN GL1, MITRAN MI ,ALLCODE AL1,ALLCODE AL2 ,ALLCODE AL3
     WHERE TL.TXDATE=GL.TXDATE
     AND TL.TXNUM=GL.TXNUM
     AND TL.DELTD<>'Y'
     AND TL.BUSDATE >= TO_DATE (F_DATE, 'DD/MM/YYYY')
     AND TL.BUSDATE <= TO_DATE (T_DATE, 'DD/MM/YYYY')
     AND TL.msgacct = AF.acctno(+)
     AND AF.custid = CF.custid (+)
     AND GL.ACCTNO LIKE V_STRACCTNO
     AND GL1.txdate (+) = GL.txdate
     AND GL1.TXNUM (+) = GL.txnum
     AND GL1.subtxno (+) = GL.subtxno
     AND GL1.dorc (+) = (CASE WHEN GL.DORC='D' THEN 'C' ELSE 'D' END)
     AND MI.TXDATE(+)= GL.TXDATE
     AND MI.txnum (+) = GL.txnum
     AND MI.SUBTXNO (+) = GL.SUBTXNO
     AND MI.ACCTNO (+) = GL.ACCTNO
     AND MI.DORC (+) = GL.DORC
     AND AL1.CDVAL =NVL(MI.TASKCD,'MIS') AND AL1.CDTYPE ='SA' AND AL1.CDNAME ='TASKCD'
     AND AL2.CDVAL =NVL(MI.DEPTCD,'MIS') AND AL2.CDTYPE ='SA' AND AL2.CDNAME ='DEPTCD'
     AND AL3.CDVAL =NVL(MI.MICD,'MIS') AND  AL3.CDTYPE ='SA' AND AL3.CDNAME ='IECD'

  --   AND MI.deltd <> 'Y'

--     AND MI.ROWNUM = 1
     ) MST

WHERE(NVL(MST.CUSTID,'-') LIKE V_STRCUSTID OR NVL(MST.MICUSTID,'-') LIKE V_STRCUSTID)
AND  NVL(MST.TASKCD,'-') LIKE V_STRTASKCD
AND NVL(MST.DEPTCD,'-') LIKE V_STRDEPTCD
AND nvl(MST.COacctno,'-') like V_COACCTNO
ORDER BY busdate , txnum;






















-- GET REPORT'S DATA

--insert into log_report
--values('Begin + F_DATE'|| F_DATE||' T_DATE ' || T_DATE,sysdate);

/* OPEN PV_REFCURSOR
      FOR

  SELECT  MST.TLTXCD TLTXCD  ,MST.TXDATE TXDATE,MST.TXNUM TXNUM,
        nvl(MST.DESCRIPTION,MST.TXDESC) TXDESC, MST.COACCTNO COACCTNO ,
        ROUND (CASE WHEN NVL(MST.AMT,0)=0 OR ABS(MST.DRAMT)<ABS( MST.AMT) THEN MST.DRAMT ELSE MST.AMT END) DRAMT,
        ROUND (CASE WHEN NVL(MST.AMT,0)=0 OR ABS(MST.CRAMT)< ABS(MST.AMT) THEN MST.CRAMT ELSE MST.AMT END)CRAMT,
        NVL(MST.FULLNAME,MST.MICUSTNAME) FULLNAME,MST.BUSDATE
 SELECT nvl(ROUND(BE_BALANCE),0) BE_BALANCE,  MST.TLTXCD TLTXCD  ,MST.TXDATE TXDATE,MST.TXNUM TXNUM, nvl(mi.DESCRIPTION,MST.TXDESC) TXDESC
   ,DTL.ACCTNO COACCTNO , ROUND(CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.DRAMT)<ABS( DTL.AMT) THEN MST.DRAMT ELSE DTL.AMT END)DRAMT,
    ROUND (CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.CRAMT)< ABS(DTL.AMT) THEN MST.CRAMT ELSE DTL.AMT END)CRAMT,  NVL(MST.FULLNAME,MI.CUSTNAME) FULLNAME,MST.BUSDATE
 FROM
    (SELECT  TL.TLTXCD, TL.TXDATE, TL.TXNUM, TL.BUSDATE, GL.CCYCD, TL.TXDESC,CF.fullname ,CF.custid,
                GL.ACCTNO, GL.DORC, GL.SUBTXNO, (CASE WHEN DORC='D' THEN GL.AMT ELSE 0 END) DRAMT,
                (CASE WHEN DORC='C' THEN GL.AMT ELSE 0 END) CRAMT
            FROM  TLLOG TL, GLTRAN GL,AFMAST AF ,CFMAST CF
             WHERE TL.TXDATE=GL.TXDATE AND TL.TXNUM=GL.TXNUM
                AND TL.DELTD<>'Y'
                AND TL.BUSDATE >= TO_DATE (F_DATE, 'DD/MM/YYYY')
                AND TL.BUSDATE <= TO_DATE (T_DATE, 'DD/MM/YYYY')
                AND TL.msgacct = AF.acctno(+)
                AND AF.custid = CF.custid (+)
                AND GL.ACCTNO LIKE V_STRACCTNO
                                  ) MST
 LEFT JOIN (SELECT  ACCTNO,TXDATE,TXNUM,DORC,SUBTXNO,SUM(AMT ) AMT FROM GLTRAN
                       GROUP BY ACCTNO,TXDATE,TXNUM,DORC,SUBTXNO)  DTL
              ON MST.TXDATE=DTL.TXDATE AND MST.TXNUM=DTL.TXNUM AND MST.SUBTXNO=DTL.SUBTXNO AND DTL.DORC= (CASE WHEN MST.DORC='D' THEN 'C' ELSE 'D' END)
 LEFT JOIN ( SELECT TXDATE ,TXNUM,SUBTXNO,DORC ,ACCTNO ,MAX(CUSTID) CUSTID,MAX(CUSTNAME ) CUSTNAME,
                       max(TASKCD)TASKCD,max(DEPTCD) DEPTCD ,max(DESCRIPTION) DESCRIPTION FROM  MITRAN  WHERE DELTD<>'Y'
                       GROUP BY TXDATE ,TXNUM,SUBTXNO,DORC ,ACCTNO
                        ) MI
               ON MST.TXNUM= MI.TXNUM  AND MST.TXDATE=MI.TXDATE AND MST.SUBTXNO=MI.SUBTXNO AND MST.DORC=MI.DORC AND MST.ACCTNO=MI.ACCTNO
 WHERE(NVL(MST.CUSTID,'-') LIKE V_STRCUSTID OR NVL(MI.CUSTID,'-') LIKE V_STRCUSTID)
             AND  NVL(mi.TASKCD,'-') LIKE V_STRTASKCD
              AND NVL(mi.DEPTCD,'-') LIKE V_STRDEPTCD
              AND nvl(DTL.acctno,'-') like V_COACCTNO
UNION ALL
 SELECT nvl(ROUND(BE_BALANCE),0) BE_BALANCE,  MST.TLTXCD TLTXCD  ,MST.TXDATE TXDATE,MST.TXNUM TXNUM, nvl(mi.DESCRIPTION,MST.TXDESC) TXDESC
   ,DTL.ACCTNO COACCTNO , ROUND(CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.DRAMT)<ABS( DTL.AMT) THEN MST.DRAMT ELSE DTL.AMT END)DRAMT,
    ROUND (CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.CRAMT)< ABS(DTL.AMT) THEN MST.CRAMT ELSE DTL.AMT END)CRAMT,  NVL(MST.FULLNAME,MI.CUSTNAME) FULLNAME,MST.BUSDATE
    FROM
    (SELECT  TL.TLTXCD, TL.TXDATE, TL.TXNUM, TL.BUSDATE, GL.CCYCD, TL.TXDESC,CF.fullname ,CF.custid,
                GL.ACCTNO, GL.DORC, GL.SUBTXNO, (CASE WHEN DORC='D' THEN GL.AMT ELSE 0 END) DRAMT,
                (CASE WHEN DORC='C' THEN GL.AMT ELSE 0 END) CRAMT
            FROM  TLLOGALL TL, GLTRANA GL,AFMAST AF ,CFMAST CF
             WHERE TL.TXDATE=GL.TXDATE AND TL.TXNUM=GL.TXNUM
                AND TL.DELTD<>'Y'
                AND TL.BUSDATE >= TO_DATE (F_DATE, 'DD/MM/YYYY')
                AND TL.BUSDATE <= TO_DATE (T_DATE, 'DD/MM/YYYY')
                AND gl.bkdate  <= TO_DATE (T_DATE, 'DD/MM/YYYY')
                AND gl.bkdate  >= TO_DATE(F_DATE, 'DD/MM/YYYY')
                AND TL.msgacct = AF.acctno(+)
                AND AF.custid = CF.custid (+)
                AND GL.ACCTNO LIKE V_STRACCTNO
                                  ) MST
 LEFT JOIN (SELECT  ACCTNO,TXDATE,TXNUM,DORC,SUBTXNO,SUM(AMT ) AMT FROM GLTRANA
                       GROUP BY ACCTNO,TXDATE,TXNUM,DORC,SUBTXNO)  DTL
              ON MST.TXDATE=DTL.TXDATE AND MST.TXNUM=DTL.TXNUM AND MST.SUBTXNO=DTL.SUBTXNO AND DTL.DORC= (CASE WHEN MST.DORC='D' THEN 'C' ELSE 'D' END)
 LEFT JOIN ( SELECT TXDATE ,TXNUM,SUBTXNO,DORC ,ACCTNO ,MAX(CUSTID) CUSTID,MAX(CUSTNAME ) CUSTNAME,
                       max(TASKCD)TASKCD,max(DEPTCD) DEPTCD ,max(DESCRIPTION) DESCRIPTION FROM  MITRAN  WHERE DELTD<>'Y'
                       GROUP BY TXDATE ,TXNUM,SUBTXNO,DORC ,ACCTNO
                        ) MI
   ON MST.TXNUM= MI.TXNUM  AND MST.TXDATE=MI.TXDATE AND MST.SUBTXNO=MI.SUBTXNO AND MST.DORC=MI.DORC AND MST.ACCTNO=MI.ACCTNO
            WHERE(NVL(MST.CUSTID,'-') LIKE V_STRCUSTID OR NVL(MI.CUSTID,'-') LIKE V_STRCUSTID)
             AND  NVL(mi.TASKCD,'-') LIKE V_STRTASKCD
              AND NVL(mi.DEPTCD,'-') LIKE V_STRDEPTCD
              AND nvl(DTL.acctno,'-') like V_COACCTNO
 ORDER BY busdate , txnum

               ;
*/--insert into log_report
--values('End + F_DATE'|| F_DATE||' T_DATE ' || T_DATE,sysdate);
--commit;
EXCEPTION
   WHEN OTHERS
   THEN
      RETURN;
END;                                                              -- PROCEDURE

 
 
 
 
/
