SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE "CI0024_1" (
   PV_REFCURSOR   IN OUT   PKG_REPORT.REF_CURSOR,
   OPT            IN       VARCHAR2,
   pv_BRID        IN       VARCHAR2,
   TLGOUPS        IN       VARCHAR2,
   TLSCOPE        IN       VARCHAR2,
 --  I_DATE         IN       VARCHAR2,
 --  PV_CUSTODYCD   IN       VARCHAR2,
   KEY            IN       VARCHAR2
 )
IS
 pkgctx   plog.log_ctx;
   logrow   tlogdebug%ROWTYPE;
--
-- PURPOSE: BRIEFLY EXPLAIN THE FUNCTIONALITY OF THE PROCEDURE
-- HOP DONG UNG TRUOC TIEN BAN TAI QUAY
-- MODIFICATION HISTORY
-- PERSON      DATE    COMMENTS
-- NGOCVTT  09-JUN-15  CREATED
-- ---------   ------  -------------------------------------------
   V_STROPT     VARCHAR2 (5);            -- A: ALL; B: BRANCH; S: SUB-BRANCH
   V_STRBRID    VARCHAR2 (40);                   -- USED WHEN V_NUMOPTION > 0
   V_INBRID     VARCHAR2 (5);

   V_STRTXNUM     VARCHAR2 (20);
   V_FDATE        DATE;

   V_STRAMT       NUMBER;
   V_STRFEE       NUMBER;
   v_taxrate       NUMBER;
   V_STRADVRATE    NUMBER;


BEGIN

   V_STROPT := OPT;

   IF (V_STROPT <> 'A') AND (PV_BRID <> 'ALL')
   THEN
      V_STRBRID := PV_BRID;
   ELSE
      V_STRBRID := '%%';
   END IF;

-----------------
/*    IF (UPPER(PV_CUSTODYCD) = 'ALL' OR PV_CUSTODYCD IS NULL)
    THEN
      V_STRCUSTODYCD := '%%';
    ELSE
      V_STRCUSTODYCD := PV_CUSTODYCD;
    END IF;
*/
   V_STRTXNUM:=KEY;

   select to_number(varvalue) into v_taxrate  from sysvar where varname = 'ADVSELLDUTY';
   SELECT TO_DATE(VARVALUE ,'DD/MM/YYYY') INTO V_FDATE FROM SYSVAR WHERE VARNAME ='CURRDATE';

    SELECT SUM(AD.AMT) ,SUM(AD.FEEAMT),MAX(ADV.ADVRATE)   INTO V_STRAMT, V_STRFEE, V_STRADVRATE
    FROM ADSCHD AD, VW_ADVSRESLOG_ALL ADV
    WHERE AD.TXDATE= V_FDATE
    AND AD.TXDATE=ADV.TXDATE(+)
    AND AD.TXNUM=ADV.TXNUM(+)
    AND AD.TXNUM IN (SELECT TXNUM FROM TLLOG WHERE TLTXCD='1153' AND TXDATE= V_FDATE AND REFTXNUM=V_STRTXNUM);

  --------------------------
   -- GET REPORT'S DATA

    OPEN  PV_REFCURSOR
     FOR

    SELECT  CF.FULLNAME, CF.CUSTODYCD, CF.IDCODE,CF.IDPLACE,CF.IDDATE,CF.ADDRESS,CF.MOBILESMS,NVL(CF.EMAIL,'') EMAIL,
             CF.MOBILE,ST.CLEARDAY, NVL(CFO.BANKACC,'') BANKACC,NVL(CFO.BANKNAME,'') CF_BANK,
             ST.TXDATE,ST.CLEARDATE,ST.ACCTNO, IO.MATCHPRICE*IO.MATCHQTTY TOTAL,
            V_STRAMT AMT_UT, V_STRFEE FEEAMT_UT,V_STRADVRATE ADVRATE, V_FDATE CURDATE,TO_NUMBER(ST.CLEARDATE-V_FDATE) DATE_NUM,
            (CASE WHEN IO.MATCHPRICE*IO.MATCHQTTY  = 0 THEN 0 ELSE
                   (CASE WHEN io.iodfeeacr = 0 and OD.Txdate = V_FDATE  THEN ROUND(IO.matchqtty * io.matchprice * ODT.deffeerate / 100)
                         ELSE io.iodfeeacr END)
             END)   feeamt,

           (CASE WHEN  CF.VAT = 'Y' THEN
              (CASE WHEN IO.iodtaxsellamt <> 0 THEN IO.iodtaxsellamt
                   ELSE (ROUND((IO.MATCHQTTY * IO.MATCHPRICE *v_taxrate)/100) + NVL(st.ARIGHT, 0)) END)
            ELSE 0 END) taxsellamt

       FROM  AFMAST AF, (SELECT * FROM CFMAST WHERE FNC_VALIDATE_SCOPE(BRID, CAREBY, TLSCOPE, pv_BRID, TLGOUPS)=0) CF,VW_STSCHD_ALL ST,VW_IOD_ALL IO,VW_ODMAST_ALL OD, ODTYPE ODT,
             (SELECT CF.CFCUSTID,CF.BANKACC,CF.BANKNAME FROM
                     (select CFCUSTID,MAX(AUTOID) AUTOID FROM CFOTHERACC  GROUP BY CFCUSTID ) ACC, CFOTHERACC CF
                      WHERE ACC.AUTOID=CF.AUTOID
              GROUP BY CF.CFCUSTID,CF.BANKACC,CF.BANKNAME) CFO,
              (SELECT * FROM  TLLOG WHERE TXNUM=V_STRTXNUM AND TXDATE=V_FDATE AND TLTXCD='1179') TL
        WHERE IO.DELTD <> 'Y'
            AND ST.DUETYPE='RM'
            AND ST.ORGORDERID=IO.ORGORDERID
            AND OD.ORDERID=IO.ORGORDERID
            AND OD.ACTYPE=ODT.ACTYPE
            AND TL.MSGACCT=AF.ACCTNO
            AND OD.TXDATE<= V_FDATE
            AND ST.CLEARDATE> V_FDATE
            AND AF.ACCTNO = OD.AFACCTNO
            AND AF.CUSTID = CF.CUSTID
            AND CF.CUSTID=CFO.CFCUSTID(+)
        ORDER BY cf.CUSTODYCD;


EXCEPTION
   WHEN OTHERS
   THEN
      RETURN;
END;                                                              -- PROCEDURE

 
 
 
 
/
