SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE "GL0020" (
   PV_REFCURSOR   IN OUT   PKG_REPORT.REF_CURSOR,
   OPT            IN       VARCHAR2,
   BRID           IN       VARCHAR2,
   F_DATE         IN       VARCHAR2,
   T_DATE         IN       VARCHAR2,
   ACCTNO         IN       VARCHAR2,
   CUSTID         IN       VARCHAR2,
   TASKCD         IN       VARCHAR2,
   DEPTCD         IN       VARCHAR2
  )
IS
--
-- PURPOSE: BRIEFLY EXPLAIN THE FUNCTIONALITY OF THE PROCEDURE
-- SO CHI TIET TAI KHOAN
-- MODIFICATION HISTORY
-- PERSON      DATE    COMMENTS

-- NAMNT  21-NOV-06  CREATED
-- ---------   ------  -------------------------------------------
   V_STROPTION        VARCHAR2 (5);       -- A: ALL; B: BRANCH; S: SUB-BRANCH
   V_STRBRID          VARCHAR2 (4);              -- USED WHEN V_NUMOPTION > 0
   V_STRACCTNO        VARCHAR2 (20);
   V_STRCUSTID        VARCHAR2 (20);
   V_STRTASKCD        VARCHAR2 (10);
   V_STRDEPTCD        VARCHAR2 (10);
   V_EOY                  VARCHAR2 (1);
   V_EOM                  VARCHAR2 (1);
   v_PERIOD             VARCHAR2 (4);
  BE_BALANCE          NUMBER (20, 2);
   LENG               NUMBER (20, 2);
   VP_CUR             PKG_REPORT.REF_CURSOR;

   Dmin         date ;
-- DECLARE PROGRAM VARIABLES AS SHOWN ABOVE
BEGIN
   V_STROPTION := OPT;
   IF (V_STROPTION <> 'A') AND (BRID <> 'ALL')
   THEN
      V_STRBRID := BRID;
   ELSE
      V_STRBRID := '%%';
   END IF;

   -- GET REPORT'S PARAMETERS
   IF (ACCTNO <> 'ALL')
   THEN
      V_STRACCTNO := ACCTNO||'%';
   ELSE
      V_STRACCTNO := '%%';
   END IF;

    IF (CUSTID  <> 'ALL')
   THEN
      V_STRCUSTID := CUSTID;
   ELSE
      V_STRCUSTID := '%%';
   END IF;

    IF (TASKCD <> 'ALL')
   THEN
      V_STRTASKCD := TASKCD;
   ELSE
      V_STRTASKCD := '%%';
   END IF;

 IF (DEPTCD  <> 'ALL')
   THEN
      V_STRDEPTCD := DEPTCD ;
   ELSE
      V_STRDEPTCD  := '%%';
   END IF;

   -- END OF GETTING REPORT'S PARAMETERS
  open VP_CUR
  for
  SELECT min(TXDATE)
  FROM GLHIST
  WHERE ACCTNO like V_STRACCTNO  ;
  LOOP
      FETCH VP_CUR
       INTO Dmin ;
       EXIT WHEN VP_CUR%NOTFOUND;
  END LOOP;
  CLOSE VP_CUR;

  --XAC DINH LOAI NGAY
 v_PERIOD :='EOD';

  if Dmin > TO_DATE(F_DATE ,'dd/MM/yyyy')-1then
       BE_BALANCE:=0;
        else
        OPEN VP_CUR
         FOR
         SELECT sum(BALANCE)
         FROM GLHIST
        WHERE TXDATE=
            ( SELECT MAX(TXDATE)
                       FROM GLHIST
                       WHERE TXDATE<  TO_DATE ( F_DATE ,'DD/MM/YYYY') )
                       AND  ACCTNO like V_STRACCTNO
                       AND PERIOD LIKE v_PERIOD  ;

      LOOP
      FETCH VP_CUR
   INTO BE_BALANCE;

      EXIT WHEN VP_CUR%NOTFOUND;
   END LOOP;
   CLOSE VP_CUR;
   END IF ;

-- GET REPORT'S DATA


      OPEN PV_REFCURSOR
       FOR

   SELECT MST.symbol ,MST.tradeplace, MST.TLTXCD TLTXCD  ,MST.TXDATE TXDATE,MST.TXNUM TXNUM,MST.TXDESC TXDESC
         ,DTL.ACCTNO COACCTNO , ROUND(CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.DRAMT)<ABS( DTL.AMT) THEN MST.DRAMT ELSE DTL.AMT END)DRAMT,
        ROUND (CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.CRAMT)< ABS(DTL.AMT) THEN MST.CRAMT ELSE DTL.AMT END)CRAMT,MST.BUSDATE
         FROM
            (SELECT SB.symbol ,SB.tradeplace ,TLTX.MNEM, TL.TLTXCD, TL.TXDATE, TL.TXNUM, TL.BUSDATE, GL.CCYCD, TL.TXDESC,
                GL.ACCTNO, GL.DORC, GL.SUBTXNO, (CASE WHEN DORC='D' THEN GL.AMT ELSE 0 END) DRAMT,
                (CASE WHEN DORC='C' THEN GL.AMT ELSE 0 END) CRAMT
            FROM TLTX, TLLOG TL, GLTRAN GL,TLLOGFLD TLFLD,SBSECURITIES SB
             WHERE TL.TXDATE=GL.TXDATE AND TL.TXNUM=GL.TXNUM
             AND  SB.codeid = SUBSTR(TLFLD.cvalue,11,6)
             AND TLTX.TLTXCD=TL.TLTXCD AND TLFLD.txnum =TL.txnum AND  TLFLD.txdate =TL.txdate
             AND TLFLD.fldcd ='03'
                AND TL.DELTD<>'Y'
                AND TL.tltxcd ='8868'
                AND TL.BUSDATE >= TO_DATE (F_DATE, 'DD/MM/YYYY')
                AND TL.BUSDATE <= TO_DATE (T_DATE, 'DD/MM/YYYY')
                AND GL.ACCTNO LIKE V_STRACCTNO
                AND SUBSTR(GL.ACCTNO,1,4)LIKE V_STRBRID
                      ) MST
           LEFT JOIN GLTRAN DTL
              ON MST.TXDATE=DTL.TXDATE AND MST.TXNUM=DTL.TXNUM AND MST.SUBTXNO=DTL.SUBTXNO AND DTL.DORC= (CASE WHEN MST.DORC='D' THEN 'C' ELSE 'D' END)

        UNION ALL
   SELECT MST.symbol ,MST.tradeplace , MST.TLTXCD TLTXCD  ,MST.TXDATE TXDATE,MST.TXNUM TXNUM,MST.TXDESC TXDESC
         ,DTL.ACCTNO COACCTNO , ROUND(CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.DRAMT)<ABS( DTL.AMT) THEN MST.DRAMT ELSE DTL.AMT END)DRAMT,
        ROUND (CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.CRAMT)< ABS(DTL.AMT) THEN MST.CRAMT ELSE DTL.AMT END)CRAMT,MST.BUSDATE
         FROM
            (SELECT SB.symbol ,SB.tradeplace ,TLTX.MNEM, TL.TLTXCD, TL.TXDATE, TL.TXNUM, TL.BUSDATE, GL.CCYCD, TL.TXDESC,
                GL.ACCTNO, GL.DORC, GL.SUBTXNO, (CASE WHEN DORC='D' THEN GL.AMT ELSE 0 END) DRAMT,
                (CASE WHEN DORC='C' THEN GL.AMT ELSE 0 END) CRAMT
            FROM TLTX, TLLOGALL TL, GLTRANA GL,TLLOGFLDALL TLFLD,SBSECURITIES SB
             WHERE TL.TXDATE=GL.TXDATE AND TL.TXNUM=GL.TXNUM
             AND  SB.codeid = SUBSTR(TLFLD.cvalue,11,6)
             AND TLTX.TLTXCD=TL.TLTXCD AND TLFLD.txnum =TL.txnum AND  TLFLD.txdate =TL.txdate
             AND TLFLD.fldcd ='03'
                AND TL.DELTD<>'Y'
                AND TL.tltxcd ='8868'
                AND TL.BUSDATE >= TO_DATE (F_DATE, 'DD/MM/YYYY')
                AND TL.BUSDATE <= TO_DATE (T_DATE, 'DD/MM/YYYY')
                AND GL.ACCTNO LIKE V_STRACCTNO
                AND SUBSTR(GL.ACCTNO,1,4)LIKE V_STRBRID
                      ) MST
           LEFT JOIN GLTRAN DTL
              ON MST.TXDATE=DTL.TXDATE AND MST.TXNUM=DTL.TXNUM AND MST.SUBTXNO=DTL.SUBTXNO AND DTL.DORC= (CASE WHEN MST.DORC='D' THEN 'C' ELSE 'D' END)

               ;



EXCEPTION
   WHEN OTHERS
   THEN
      RETURN;
END;                                                              -- PROCEDURE

 
 
 
 
/
