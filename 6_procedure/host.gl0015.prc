SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE "GL0015" (
   PV_REFCURSOR   IN OUT   PKG_REPORT.REF_CURSOR,
   OPT            IN       VARCHAR2,
   BRID           IN       VARCHAR2,
   F_DATE         IN       VARCHAR2,
   T_DATE         IN       VARCHAR2,
   ACCTNO         IN       VARCHAR2,
   CUSTID         IN       VARCHAR2,
   TASKCD         IN       VARCHAR2,
   DEPTCD         IN       VARCHAR2,
   MICD           IN       VARCHAR2
  )
IS
--
-- PURPOSE: BRIEFLY EXPLAIN THE FUNCTIONALITY OF THE PROCEDURE
-- SO CHI TIET TAI KHOAN
-- MODIFICATION HISTORY
-- PERSON      DATE    COMMENTS

-- NAMNT  21-NOV-06  CREATED
-- ---------   ------  -------------------------------------------
   V_STROPTION        VARCHAR2 (5);       -- A: ALL; B: BRANCH; S: SUB-BRANCH
   V_STRBRID          VARCHAR2 (4);              -- USED WHEN V_NUMOPTION > 0
   V_STRACCTNO        VARCHAR2 (20);
   V_STRCUSTID        VARCHAR2 (20);
   V_STRTASKCD        VARCHAR2 (10);
   V_STRDEPTCD        VARCHAR2 (10);
   V_STRMICD          VARCHAR2 (10);
   V_EOY                  VARCHAR2 (1);
   V_EOM                  VARCHAR2 (1);
   V_PERIOD             VARCHAR2 (4);
  BE_BALANCE          NUMBER (20, 2);
   LENG               NUMBER (20, 2);
   PV_CUR             PKG_REPORT.REF_CURSOR;
     DMIN         DATE ;
-- DECLARE PROGRAM VARIABLES AS SHOWN ABOVE
BEGIN
   V_STROPTION := OPT;
   IF (V_STROPTION <> 'A') AND (BRID <> 'ALL')
   THEN
      V_STRBRID := BRID;
   ELSE
      V_STRBRID := '%%';
   END IF;

   -- GET REPORT'S PARAMETERS
   IF (ACCTNO <> 'ALL')
   THEN
      V_STRACCTNO := ACCTNO||'%';
   ELSE
      V_STRACCTNO := '%%';
   END IF;

    IF (CUSTID  <> 'ALL')
   THEN
      V_STRCUSTID := CUSTID;
   ELSE
      V_STRCUSTID := '%%';
   END IF;

    IF (TASKCD <> 'ALL')
   THEN
      V_STRTASKCD := TASKCD;
   ELSE
      V_STRTASKCD := '%%';
   END IF;

 IF (DEPTCD  <> 'ALL')
   THEN
      V_STRDEPTCD := DEPTCD ;
   ELSE
      V_STRDEPTCD  := '%%';
   END IF;
   IF (MICD  <> 'ALL')
   THEN
      V_STRMICD := MICD ;
   ELSE
      V_STRMICD  := '%%';
   END IF;

   -- END OF GETTING REPORT'S PARAMETERS
  OPEN PV_CUR
  FOR
  SELECT MIN(TXDATE)
  FROM GLHIST
  WHERE ACCTNO LIKE V_STRACCTNO  ;
  LOOP
      FETCH PV_CUR
       INTO DMIN ;
       EXIT WHEN PV_CUR%NOTFOUND;
  END LOOP;
  CLOSE PV_CUR;

  --XAC DINH LOAI NGAY


V_PERIOD :='EOD';


  IF DMIN > TO_DATE(F_DATE ,'DD/MM/YYYY')-1THEN
       BE_BALANCE:=0;
        ELSE
        OPEN PV_CUR
         FOR
         SELECT SUM(BALANCE)
         FROM GLHIST
        WHERE TXDATE =
            ( SELECT MAX(TXDATE)
                       FROM GLHIST
                       WHERE TXDATE < TO_DATE ( F_DATE ,'DD/MM/YYYY'))
                       AND  ACCTNO LIKE V_STRACCTNO
                       AND PERIOD LIKE V_PERIOD  ;

      LOOP
      FETCH PV_CUR
   INTO BE_BALANCE;

      EXIT WHEN PV_CUR%NOTFOUND;
   END LOOP;
   CLOSE PV_CUR;
   END IF ;

-- GET REPORT'S DATA

 OPEN PV_REFCURSOR
       FOR

 SELECT ROUND(BE_BALANCE) BE_BALANCE,  MST.TLTXCD TLTXCD  ,MST.TXDATE TXDATE,MST.TXNUM TXNUM,MST.TXDESC TXDESC,TO_CHAR(MI.TASKCD_NAME) TASKCD ,TO_CHAR(MI.MICD_NAME) MICD ,TO_CHAR(MI.DEPTCD_NAME) DEPTCD
                ,DTL.ACCTNO COACCTNO , ROUND(CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.DRAMT)<ABS( DTL.AMT) THEN MST.DRAMT ELSE DTL.AMT END)DRAMT,
        ROUND (CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.CRAMT)< ABS(DTL.AMT) THEN MST.CRAMT ELSE DTL.AMT END)CRAMT, NVL(MST.FULLNAME,MI.CUSTNAME) FULLNAME,MST.BUSDATE
         FROM
            (SELECT TLTX.MNEM, TL.TLTXCD, TL.TXDATE, TL.TXNUM, TL.BUSDATE, GL.CCYCD, TL.TXDESC,
                GL.ACCTNO, GL.DORC, GL.SUBTXNO, (CASE WHEN DORC='D' THEN GL.AMT ELSE 0 END) DRAMT,
                (CASE WHEN DORC='C' THEN GL.AMT ELSE 0 END) CRAMT,CF.FULLNAME ,CF.CUSTID
            FROM TLTX, TLLOG TL, GLTRAN GL,AFMAST AF ,CFMAST CF
             WHERE TL.TXDATE=GL.TXDATE AND TL.TXNUM=GL.TXNUM AND TLTX.TLTXCD=TL.TLTXCD
                AND TL.DELTD<>'Y'
                AND TL.BUSDATE >= TO_DATE (F_DATE, 'DD/MM/YYYY')
                AND TL.BUSDATE <= TO_DATE (T_DATE, 'DD/MM/YYYY')
                AND TL.MSGACCT = AF.ACCTNO(+)
                AND AF.CUSTID = CF.CUSTID (+)
                AND GL.ACCTNO LIKE V_STRACCTNO
                                    ) MST
    LEFT JOIN GLTRAN DTL
              ON MST.TXDATE=DTL.TXDATE AND MST.TXNUM=DTL.TXNUM AND MST.SUBTXNO=DTL.SUBTXNO AND DTL.DORC= (CASE WHEN MST.DORC='D' THEN 'C' ELSE 'D' END)
    LEFT JOIN (
           SELECT MI.* ,AL1.CDCONTENT   TASKCD_NAME,AL2.CDCONTENT DEPTCD_NAME ,AL3.CDCONTENT  MICD_NAME
                FROM  MITRAN MI,ALLCODE AL1,ALLCODE AL2 ,ALLCODE AL3
                WHERE
                AL1.CDVAL =NVL(MI.TASKCD,'MIS') AND AL1.CDTYPE ='SA' AND AL1.CDNAME ='TASKCD'
                AND AL2.CDVAL =NVL(MI.DEPTCD,'MIS') AND AL2.CDTYPE ='SA' AND AL2.CDNAME ='DEPTCD'
                AND AL3.CDVAL =NVL(MI.MICD,'MIS') AND  AL3.CDTYPE ='SA' AND AL3.CDNAME ='IECD'
                AND DELTD<>'Y'
                        ) MI
               ON MST.TXNUM= MI.TXNUM  AND MST.TXDATE=MI.TXDATE AND MST.SUBTXNO=MI.SUBTXNO AND MST.DORC=MI.DORC AND MST.ACCTNO=MI.ACCTNO
          WHERE      NVL(MI.TASKCD,'-') LIKE V_STRTASKCD
                     AND NVL(MI.DEPTCD,'-') LIKE V_STRDEPTCD
                     AND NVL(MI.MICD,'-') LIKE V_STRMICD
                     AND (NVL(MST.CUSTID,'-') LIKE V_STRCUSTID OR NVL(MI.CUSTID,'-') LIKE V_STRCUSTID)

UNION ALL

  SELECT ROUND(BE_BALANCE) BE_BALANCE,  MST.TLTXCD TLTXCD  ,MST.TXDATE TXDATE,MST.TXNUM TXNUM,MST.TXDESC TXDESC,TO_CHAR(MI.TASKCD_NAME) TASKCD ,TO_CHAR(MI.MICD_NAME) MICD ,TO_CHAR(MI.DEPTCD_NAME) DEPTCD
                ,DTL.ACCTNO COACCTNO , ROUND(CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.DRAMT)<ABS( DTL.AMT) THEN MST.DRAMT ELSE DTL.AMT END)DRAMT,
        ROUND (CASE WHEN NVL(DTL.AMT,0)=0 OR ABS(MST.CRAMT)< ABS(DTL.AMT) THEN MST.CRAMT ELSE DTL.AMT END)CRAMT, NVL(MST.FULLNAME,MI.CUSTNAME) FULLNAME,MST.BUSDATE
         FROM
            (SELECT TLTX.MNEM, TL.TLTXCD, TL.TXDATE, TL.TXNUM, TL.BUSDATE, GL.CCYCD, TL.TXDESC,
                GL.ACCTNO, GL.DORC, GL.SUBTXNO, (CASE WHEN DORC='D' THEN GL.AMT ELSE 0 END) DRAMT,
                (CASE WHEN DORC='C' THEN GL.AMT ELSE 0 END) CRAMT,CF.FULLNAME ,CF.CUSTID
            FROM TLTX, TLLOGALL TL, GLTRANA GL,AFMAST AF ,CFMAST CF
             WHERE TL.TXDATE=GL.TXDATE AND TL.TXNUM=GL.TXNUM AND TLTX.TLTXCD=TL.TLTXCD
                AND TL.DELTD<>'Y'
                AND TL.BUSDATE >= TO_DATE (F_DATE, 'DD/MM/YYYY')
                AND TL.BUSDATE <= TO_DATE (T_DATE, 'DD/MM/YYYY')
                AND TL.MSGACCT = AF.ACCTNO(+)
                AND AF.CUSTID = CF.CUSTID (+)
                AND GL.ACCTNO LIKE V_STRACCTNO

                      ) MST
    LEFT JOIN GLTRANA DTL
              ON MST.TXDATE=DTL.TXDATE AND MST.TXNUM=DTL.TXNUM AND MST.SUBTXNO=DTL.SUBTXNO AND DTL.DORC= (CASE WHEN MST.DORC='D' THEN 'C' ELSE 'D' END)
    LEFT JOIN (
           SELECT MI.* ,AL1.CDCONTENT   TASKCD_NAME,AL2.CDCONTENT DEPTCD_NAME ,AL3.CDCONTENT  MICD_NAME
                FROM  MITRAN MI,ALLCODE AL1,ALLCODE AL2 ,ALLCODE AL3
                WHERE
                AL1.CDVAL =NVL(MI.TASKCD,'MIS') AND AL1.CDTYPE ='SA' AND AL1.CDNAME ='TASKCD'
                AND AL2.CDVAL =NVL(MI.DEPTCD,'MIS') AND AL2.CDTYPE ='SA' AND AL2.CDNAME ='DEPTCD'
                AND AL3.CDVAL =NVL(MI.MICD,'MIS') AND  AL3.CDTYPE ='SA' AND AL3.CDNAME ='IECD'
                AND DELTD<>'Y'
                        ) MI
               ON MST.TXNUM= MI.TXNUM  AND MST.TXDATE=MI.TXDATE AND MST.SUBTXNO=MI.SUBTXNO AND MST.DORC=MI.DORC AND MST.ACCTNO=MI.ACCTNO
          WHERE      NVL(MI.TASKCD,'-') LIKE V_STRTASKCD
                     AND NVL(MI.DEPTCD,'-') LIKE V_STRDEPTCD
                     AND NVL(MI.MICD,'-') LIKE V_STRMICD
                     AND (NVL(MST.CUSTID,'-') LIKE V_STRCUSTID OR NVL(MI.CUSTID,'-') LIKE V_STRCUSTID)
 ORDER BY busdate , txnum
               ;



EXCEPTION
   WHEN OTHERS
   THEN
      RETURN;
END;                                                              -- PROCEDURE

 
 
 
 
/
