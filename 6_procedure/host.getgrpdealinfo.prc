SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE "GETGRPDEALINFO" (PV_REFCURSOR IN OUT PKG_REPORT.REF_CURSOR,GROUPID IN VARCHAR2,amt IN number)
  IS

  v_groupid VARCHAR2(20);
  l_amt number;
    l_strcurrdate varchar2(10);
BEGIN

    v_groupid:=to_char(GROUPID);
    l_amt:=to_number(amt);
    SELECT VARVALUE into l_strcurrdate FROM SYSVAR WHERE VARNAME='CURRDATE';

OPEN PV_REFCURSOR FOR


SELECT A.* , CASE WHEN INTMIN+FEEMIN < CURINT+CURFEE THEN ROUND(CURAMT + INTPENA_CUR + FEEPENA_CUR + CURINT + CURFEE)
        ELSE ROUND(CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE))) END SUMAMT  FROM
(
SELECT AMTPAID,INTPAID,FEEPAID, ROUND (AMTPAID * RATE1 * GREATEST (least(MINTERM,PRINFRQ) - TO_NUMBER(TO_DATE(l_strcurrdate,'DD/MM/RRRR') - TO_DATE(RLSDATE,'DD/MM/RRRR')),0 ) /100/360
        + AMTPAID * RATE2 * GREATEST (GREATEST(MINTERM-PRINFRQ,0)-GREATEST(TO_DATE(l_strcurrdate,'DD/MM/RRRR') - TO_DATE(DUEDATE,'DD/MM/RRRR'),0 ),0) /100/360,0) INTPENA,

       ROUND(AMTPAID * CFRATE1 * GREATEST (least(MINTERM,PRINFRQ) - TO_NUMBER(TO_DATE(l_strcurrdate,'DD/MM/RRRR') - TO_DATE(RLSDATE,'DD/MM/RRRR')),0 ) /100/360
        + AMTPAID * CFRATE2 *  GREATEST (GREATEST(MINTERM-PRINFRQ,0)-GREATEST(TO_DATE(l_strcurrdate,'DD/MM/RRRR') - TO_DATE(DUEDATE,'DD/MM/RRRR'),0 ),0) /100/360,0) FEEPENA,
       RATEX, RATEY, INTMIN,FEEMIN, CURAMT, CURINT, CURFEE, INTPAIDMETHOD, RATE1, RATE2,CFRATE1, CFRATE2, MINTERM, PRINFRQ, RLSDATE, DUEDATE, INTPENA_CUR, FEEPENA_CUR
FROM (
    SELECT
        CASE WHEN INTPAIDMETHOD IN ('I','P') THEN
            CASE WHEN    GREATEST (INTMIN+FEEMIN, CURINT+CURFEE)=0 THEN l_amt
                ELSE ROUND(l_amt * (CURAMT/ GREATEST( CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)),1)))
            END
            WHEN INTPAIDMETHOD IN ('F') THEN
                greatest(least(l_amt - greatest(FEEMIN, CURFEE) - greatest(INTMIN, CURINT), CURAMT),0)
            ELSE
                CASE WHEN  round(l_amt,0) =round(CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)) + INTPENA_CUR + FEEPENA_CUR,0) THEN CURAMT
                    ELSE
                        CASE WHEN l_amt < CURAMT THEN l_amt
                            ELSE
                                case when round(l_amt,0) = round(CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)),0) then CURAMT
                                    ELSE CURAMT
                                END
                        END
                END
        END AMTPAID,

        CASE WHEN INTPAIDMETHOD IN ('I','P') THEN
            CASE WHEN    GREATEST ( INTMIN, CURINT) = 0 THEN 0
                ELSE ROUND(l_amt * GREATEST(INTMIN, CURINT) / GREATEST( CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)),1))
            END
            WHEN INTPAIDMETHOD IN ('F') THEN
                greatest(least(l_amt - greatest(FEEMIN, CURFEE),greatest(INTMIN, CURINT)),0)
            ELSE
                CASE WHEN  round(l_amt,0) =round(CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)) + INTPENA_CUR + FEEPENA_CUR,0) THEN ROUND(GREATEST ( INTMIN,CURINT ) + INTPENA_CUR,0)
                    ELSE
                        case when round(l_amt,0) = round(CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)),0) then INTMIN
                            ELSE 0
                        END
                END
        END INTPAID,
        CASE WHEN INTPAIDMETHOD IN ('I','P') THEN
            CASE WHEN GREATEST ( FEEMIN, CURFEE) = 0 THEN 0
                ELSE ROUND(l_amt - ROUND(l_amt * (CURAMT/ GREATEST( CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)),1))) - ROUND(l_amt * GREATEST(INTMIN, CURINT) / GREATEST( CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)),1)) )
            END
            WHEN INTPAIDMETHOD IN ('F') THEN
                greatest(least(l_amt,greatest(FEEMIN, CURFEE)),0)
            ELSE
                CASE WHEN  round(l_amt,0) =round(CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)) + INTPENA_CUR + FEEPENA_CUR,0) THEN ROUND(GREATEST ( FEEMIN,CURFEE ) + FEEPENA_CUR,0)
                    ELSE
                        case when round(l_amt,0) = round(CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)),0) then  FEEMIN
                            ELSE 0
                        END
                END
        END FEEPAID,
        INTPENA_CUR, FEEPENA_CUR,
        RATEX, RATEY, INTMIN,FEEMIN, CURAMT, CURINT, CURFEE, INTPAIDMETHOD, RATE1, RATE2,CFRATE1, CFRATE2, MINTERM, PRINFRQ, RLSDATE, DUEDATE

    FROM (

        SELECT ROUND(CURAMT/ GREATEST( CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)),1),20) RATEX,  ROUND(GREATEST(INTMIN, CURINT) / GREATEST( CURAMT + GREATEST((INTMIN + FEEMIN), (CURINT + CURFEE)),1),20) RATEY,
        INTMIN,FEEMIN, CURAMT, CURINT, CURFEE, INTPAIDMETHOD, RATE1, RATE2,CFRATE1, CFRATE2, MINTERM, PRINFRQ, RLSDATE, DUEDATE,

            ROUND (CURAMT * RATE1 * GREATEST (least(MINTERM,PRINFRQ) - TO_NUMBER(TO_DATE(l_strcurrdate,'DD/MM/RRRR') - TO_DATE(RLSDATE,'DD/MM/RRRR')),0 ) /100/360
        + CURAMT * RATE2 * GREATEST (GREATEST(MINTERM-PRINFRQ,0)-GREATEST(TO_DATE(l_strcurrdate,'DD/MM/RRRR') - TO_DATE(DUEDATE,'DD/MM/RRRR'),0 ),0) /100/360) INTPENA_CUR,

     ROUND(CURAMT * CFRATE1 * GREATEST (least(MINTERM,PRINFRQ) - TO_NUMBER(TO_DATE(l_strcurrdate,'DD/MM/RRRR') - TO_DATE(RLSDATE,'DD/MM/RRRR')),0 ) /100/360
        + CURAMT * CFRATE2 *  GREATEST (GREATEST(MINTERM-PRINFRQ,0)-GREATEST(TO_DATE(l_strcurrdate,'DD/MM/RRRR') - TO_DATE(DUEDATE,'DD/MM/RRRR'),0 ),0) /100/360) FEEPENA_CUR

        FROM (
            SELECT  CURAMT, CURINT, CURFEE, INTPAIDMETHOD, RATE1, RATE2,CFRATE1, CFRATE2, MINTERM, PRINFRQ, RLSDATE, DUEDATE,

            CASE WHEN TO_DATE(l_strcurrdate,'DD/MM/RRRR') - TO_DATE(RLSDATE,'DD/MM/RRRR') >= MINTERM THEN CURINT ELSE
             ROUND((CURAMT *   (LEAST(Minterm, PRINFRQ)*RATE1 + GREATEST ( 0 , MINTERM - PRINFRQ) * RATE2) ) /100/360) END INTMIN,

            CASE WHEN TO_DATE(l_strcurrdate,'DD/MM/RRRR') - TO_DATE(RLSDATE,'DD/MM/RRRR') >= MINTERM THEN CURFEE ELSE
              ROUND((CURAMT *   (LEAST(Minterm, PRINFRQ)* CFRATE1 + GREATEST ( 0 , MINTERM - PRINFRQ) * CFRATE2) ) /100/360)  END FEEMIN

            FROM (
                SELECT  CURAMT, CURINT, CURFEE, INTPAIDMETHOD, RATE1, RATE2,CFRATE1, CFRATE2, LEAST(MINTERM, TO_NUMBER( TO_DATE(OVERDUEDATE,'DD/MM/RRRR') - TO_DATE(RLSDATE,'DD/MM/RRRR')) )  MINTERM, PRINFRQ, RLSDATE, DUEDATE
                FROM (
                        SELECT ROUND(LNS.NML) + ROUND(LNS.OVD) CURAMT,
                                ROUND(LNS.INTNMLACR) + ROUND(LNS.intdue) + ROUND(LNS.intovd) + ROUND(LNS.intovdprin) CURINT,
                                ROUND(LNS.FEEINTNMLACR) + ROUND(LNS.FEEINTOVDACR) + ROUND(LNS.FEEINTDUE) + ROUND(LNS.FEEINTNMLOVD) CURFEE, LN.INTPAIDMETHOD,
                            LNS.RATE1, LNS.RATE2, LNS.CFRATE1, LNS.CFRATE2, LN.MINTERM, TO_DATE(lns.DUEDATE,'DD/MM/RRRR') -  TO_DATE(lns.RLSDATE,'DD/MM/RRRR') PRINFRQ, LN.RLSDATE,LNS.DUEDATE,lns.OVERDUEDATE
                            FROM (SELECT * FROM lnschd UNION SELECT * FROM lnschdhist) LNS, LNMAST LN, LNTYPE LNT
                        WHERE LN.ACCTNO in (select lnacctno from dfgroup where groupid= v_groupid) AND LN.ACCTNO=LNS.ACCTNO
                            AND LN.ACTYPE=LNT.ACTYPE
                            and REFTYPE='P'
                    )
                )
        )
    )
)
) A ;



EXCEPTION
    WHEN others THEN
        return;
END;

 
 
 
 
/
