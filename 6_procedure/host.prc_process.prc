SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE PRC_PROCESS IS
    CURSOR C_MSG_RECEIVE IS
    SELECT MSGTYPE,ID, REPLACE(MSGXML,'&',' ') MSGXML, PROCESS FROM (
        SELECT MSGTYPE,ID, MSGXML, PROCESS
        FROM MSGRECEIVETEMP
        WHERE PROCESS = 'N' ORDER BY ID
        )
        WHERE ROWNUM BETWEEN 0 AND (SELECT SYSVALUE FROM ORDERSYS WHERE SYSNAME = 'HOSERECEIVESIZE');

    V_MSG_RECEIVE C_MSG_RECEIVE%ROWTYPE;
    pkgctx   plog.log_ctx;
BEGIN
    plog.setbeginsection (pkgctx, 'PRC_PROCESS');
    OPEN C_MSG_RECEIVE;
    LOOP
        FETCH C_MSG_RECEIVE INTO V_MSG_RECEIVE;
        EXIT WHEN C_MSG_RECEIVE%NOTFOUND;
        BEGIN
            CASE V_MSG_RECEIVE.MSGTYPE
               WHEN '8'   THEN PRC_PROCESS8(V_MSG_RECEIVE.MSGXML,V_MSG_RECEIVE.ID);
               WHEN '3'   THEN PCK_GW_COMMON.PRC_PROCESS3(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN '9'   THEN PCK_GW_COMMON.PRC_PROCESS9(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'AI'  THEN PCK_GW_COMMON.PRC_PROCESSAI(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'AJ'  THEN PCK_GW_COMMON.PRC_PROCESSAJ(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'j'   THEN PCK_GW_COMMON.PRC_PROCESSj(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'K03' THEN PCK_GW_COMMON.PRC_PROCESSK03(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'K04' THEN PCK_GW_COMMON.PRC_PROCESSK04(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'K05' THEN PCK_GW_COMMON.PRC_PROCESSK05(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'K06' THEN PCK_GW_COMMON.PRC_PROCESSK06(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'K07' THEN PCK_GW_COMMON.PRC_PROCESSK07(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'K08' THEN PCK_GW_COMMON.PRC_PROCESSK08(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'K09' THEN PCK_GW_COMMON.PRC_PROCESSK09(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'K11' THEN PCK_GW_COMMON.PRC_PROCESSK11(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'K15' THEN PCK_GW_COMMON.PRC_PROCESSK15(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'K16' THEN PCK_GW_COMMON.PRC_PROCESSK16(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'K17' THEN PCK_GW_COMMON.PRC_PROCESSK17(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               WHEN 'S'   THEN PCK_GW_COMMON.PRC_PROCESSS(V_MSG_RECEIVE.MSGXML,C_GW_MARKET);
               ELSE NULL;
            END CASE;

            UPDATE MSGRECEIVETEMP SET PROCESS = 'Y', PROCESSTIME=SYSDATE, PROCESSNUM = PROCESSNUM + 1
            WHERE ID =V_MSG_RECEIVE.ID;
            COMMIT;
        EXCEPTION WHEN OTHERS THEN
            plog.error(pkgctx, C_GW_MARKET||'.PRC_PROCESS'||'exeption in process MSG ID = '||V_MSG_RECEIVE.ID||' V_MSG_RECEIVE.MSGTYPE = '||V_MSG_RECEIVE.MSGTYPE);
            plog.error(pkgctx, SQLERRM || '--' || dbms_utility.format_error_backtrace);
            ROLLBACK;
            UPDATE MSGRECEIVETEMP SET PROCESS = 'E', PROCESSTIME=SYSDATE, PROCESSNUM = PROCESSNUM + 1
            WHERE ID = V_MSG_RECEIVE.ID;
            COMMIT;
        END;
    END LOOP;
    CLOSE C_MSG_RECEIVE;
    plog.setendsection (pkgctx, 'PRC_PROCESS');
EXCEPTION WHEN OTHERS THEN
    plog.error(pkgctx, SQLERRM || '--' || dbms_utility.format_error_backtrace);
    plog.setendsection (pkgctx, 'PRC_PROCESS');
    ROLLBACK;
    RAISE errnums.E_SYSTEM_ERROR;
END PRC_PROCESS;
/
